{"version":3,"file":"popup.js","sources":["../../src/popup/instagram_connector.js","../../src/shared/credentials.js","../../src/popup/ui.js"],"sourcesContent":["export class InstagramError extends Error {\n  constructor (status, error = '') {\n    super(error)\n    this.status = status\n    this.error = error\n    this.message = `InstagramError ${status}: ${error.response ? error.response.message : error}`\n    this.response = error.response\n  }\n}\n\nexport class TimeoutError extends Error {}\n\nexport class InstagramConnector {\n  constructor () {\n    this.isStopped = false\n    this.isConnected = false\n\n    this.init = async () => {\n      try {\n        const ping = await this.request({\n          method: 'ping',\n        })\n\n        console.log('ping', ping)\n\n        this.isConnected = ping.status === 'ok' && Boolean(ping.pong)\n      } catch (err) {\n        if (err instanceof TimeoutError) {\n          this.isConnected = false\n          return\n        }\n\n        throw err\n      }\n    }\n\n    this.start = () => (this.isStopped = false)\n    this.kill = () => (this.isStopped = true)\n  }\n\n  request (data) {\n    return new Promise((resolve, reject) => {\n      if (this.isStopped) return reject(new Error('Request was killed'))\n\n      // { method, params } = method\n\n      const req_id = Date.now()\n\n      const handler = (message, sender) => {\n        const { status, error } = message\n\n        if (message.req_id && req_id !== message.req_id) return\n\n        chrome.runtime.onMessage && chrome.runtime.onMessage.removeListener(handler)\n\n        console.log('request', data.method, '->', status, message)\n\n        console.log(status, error)\n\n        if (status !== 'ok') {\n          reject(new InstagramError(status, error))\n        } else {\n          resolve(message)\n        }\n      }\n\n      setTimeout(() => reject(new TimeoutError('Request timeout')), 10000)\n\n      chrome.runtime.onMessage && chrome.runtime.onMessage.addListener(handler)\n\n      console.log('send_message', null, { req_id, ...data })\n      chrome.runtime.sendMessage(null, { req_id, ...data })\n    })\n  }\n}\n\nexport const instagram = new InstagramConnector()\n\nwindow.instagram = instagram\n\nexport default instagram\n","/* eslint-disable prefer-promise-reject-errors */\nexport const saveCredentials = (username, password) => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.set({ credentials: { username, password } }, () => {\n      resolve({ username, password })\n    })\n\n    setTimeout(() => reject('storage error'), 5000)\n  })\n}\n\nexport const getCredentials = () => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.get(['credentials'], result => {\n      resolve(result.credentials || {})\n    })\n\n    setTimeout(() => reject('storage error'), 5000)\n  })\n}\n\nexport const clearCredentials = () => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.set({ credentials: null }, result => {\n      resolve(result)\n    })\n\n    setTimeout(() => reject('storage error'), 5000)\n  })\n}\n\n// window.saveCredentials = saveCredentials\n// window.getCredentials = getCredentials\n","import instagram from './instagram_connector'\nimport {\n  saveCredentials,\n  clearCredentials,\n} from '../shared/credentials'\n\nconst whenLogged = async () => {\n  const { user } = await instagram.request({\n    method: 'get_user_info',\n    params: ['instagram'],\n  })\n\n  console.log('@instagram', user.pk, user)\n\n  // const follow = await instagram.callMethod('follow', user.pk)\n\n  // console.log('follow request', follow)\n\n  await updateView()\n}\n\nconst openControlPanel = () => {\n  const WEBSITE_URL = 'https://dashboard.gramup.me/'\n  window.open(WEBSITE_URL)\n}\n\nconst updateView = async () => {\n  try {\n    const { user } = await instagram.request({\n      method: 'check_login',\n    })\n\n    console.log('update view, user =', user)\n\n    const logged_in = !!user.pk\n\n    setView({\n      logged_in,\n      user,\n    })\n  } catch (err) {\n    setView({\n      logged_in: false,\n      user: null,\n    })\n  }\n}\n\nconst setView = ({ logged_in, user = {} } = {}) => {\n  const changeDisplay = (elem, isShown) => isShown\n    ? elem.classList.remove('hide')\n    : elem.classList.add('hide')\n\n  if (logged_in) {\n    document.querySelectorAll('.logged_in').forEach(elem => changeDisplay(elem, true))\n    document.querySelectorAll('.not_logged_in').forEach(elem => changeDisplay(elem, false))\n  } else {\n    document.querySelectorAll('.logged_in').forEach(elem => changeDisplay(elem, false))\n    document.querySelectorAll('.not_logged_in').forEach(elem => changeDisplay(elem, true))\n  }\n\n  if (user) {\n    document.querySelector('.username-field').innerText = user.username\n  }\n}\n\nwindow.onload = async () => {\n  const login_form = document.forms.instalogin\n\n  if (!login_form) return\n\n  await updateView()\n\n  document.querySelector('#exit').onclick = async () => {\n    await clearCredentials()\n\n    await instagram.request({\n      method: 'exit',\n    })\n\n    await updateView()\n  }\n\n  document.querySelector('.btn-get-cookies').onclick = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await instagram.request({\n        method: 'login_via_cookie',\n      })\n\n      onLoginSuccess(res)\n    } catch (err) {\n      console.log('Login Error', err)\n      onLoginError(err.message)\n      const { error: { response } } = err\n      console.error(response)\n    }\n  }\n\n  login_form.onsubmit = async (event) => {\n    event.preventDefault()\n\n    const { username, password } = document.forms.instalogin.elements\n    const creds = { username: username.value, password: password.value }\n\n    try {\n      const res = await instagram.request({\n        method: 'login',\n        params: [username.value, password.value],\n      })\n\n      onLoginSuccess(res, creds)\n    } catch (err) {\n      console.error(err)\n\n      const { error: { response } } = err || {}\n\n      console.error(response)\n\n      if (response.two_factor_required) {\n        const two_factor_data = response\n        const two_factor_code = prompt('Input a code for two-factor auth from SMS')\n\n        if (!two_factor_code) {\n          return onLoginError('No code')\n        }\n\n        const res = await instagram.request({\n          method: 'login_2fa',\n          params: [username.value, password.value, two_factor_code, two_factor_data],\n        })\n\n        if (res.status === 'ok') {\n          onLoginSuccess(res, creds)\n        } else {\n          onLoginError(res.error.message)\n        }\n      } else if (response.challenge) {\n        onLoginError(response.message)\n        window.open(response.challenge.url)\n      } else {\n        onLoginError(response.message)\n      }\n\n      // if (err.message.includes(`status code 400`)) {\n      //   alert(`InstagramError: Probably wrong password:` + err.message)\n      // } else if (err.message.includes(`status code 400`)) {\n      //   alert(`InstagramError: Probably wrong password:` + err.message)\n      // } else {\n      //   alert(err.message)\n      // }\n    }\n  }\n\n  const onLoginSuccess = async (res, creds) => {\n    if (creds) {\n      const { username, password } = creds\n      await saveCredentials(username, password)\n    }\n\n    await whenLogged()\n    openControlPanel()\n  }\n\n  const onLoginError = async (reason) => {\n    alert(reason)\n    console.error('LoginError:', reason)\n  }\n}\n"],"names":["InstagramError","Error","[object Object]","status","error","super","this","message","response","TimeoutError","instagram","isStopped","isConnected","init","async","ping","request","method","console","log","Boolean","pong","err","start","kill","data","Promise","resolve","reject","req_id","Date","now","handler","sender","chrome","runtime","onMessage","removeListener","setTimeout","addListener","sendMessage","window","updateView","user","logged_in","pk","setView","changeDisplay","elem","isShown","classList","remove","add","document","querySelectorAll","forEach","querySelector","innerText","username","onload","login_form","forms","instalogin","onclick","storage","local","set","credentials","result","event","preventDefault","res","onLoginSuccess","onLoginError","onsubmit","password","elements","creds","value","params","two_factor_required","two_factor_data","two_factor_code","prompt","challenge","open","url","saveCredentials","whenLogged","reason","alert"],"mappings":"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"}