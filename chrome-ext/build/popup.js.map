{"version":3,"file":"popup.js","sources":["../../src/shared/credentials.js","../../src/popup/instagram_connector.js","../../src/popup/ui.js"],"sourcesContent":["export const saveCredentials = (username, password) => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.set({ credentials: { username, password } }, () => {\n      resolve({ username, password })\n    })\n\n    setTimeout(() => reject('storage error'), 5000)\n  })\n}\n\nexport const getCredentials = () => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.get(['credentials'], result => {\n      resolve(result.credentials || {})\n    })\n\n    setTimeout(() => reject('storage error'), 5000)\n  })\n}\n\nexport const clearCredentials = () => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.set({ credentials: null }, result => {\n      resolve(result)\n    })\n\n    setTimeout(() => reject('storage error'), 5000)\n  })\n}\n\nwindow.saveCredentials = saveCredentials\nwindow.getCredentials = getCredentials\n","export class InstagramError extends Error {\n  constructor (status, error = '') {\n    super(error)\n    this.status = status\n    this.error = error\n    this.message = `InstagramError ${status}: ${error.response ? error.response.message : error}`\n    this.response = error.response\n  }\n}\n\nexport class TimeoutError extends Error {}\n\nexport class InstagramConnector {\n  constructor () {\n    this.isStopped = false\n    this.isConnected = false\n\n    this.init = async () => {\n      try {\n        const ping = await this.request({\n          method: 'ping',\n        })\n\n        console.log('ping', ping)\n\n        this.isConnected = ping.status === 'ok' && Boolean(ping.pong)\n      } catch (err) {\n        if (err instanceof TimeoutError) {\n          this.isConnected = false\n          return\n        }\n\n        throw err\n      }\n    }\n\n    this.start = () => (this.isStopped = false)\n    this.kill = () => (this.isStopped = true)\n  }\n\n  request (data) {\n    return new Promise((resolve, reject) => {\n      if (this.isStopped) return reject(new Error('Request was killed'))\n\n      // { method, params } = method\n\n      const req_id = Date.now()\n\n      const handler = (message, sender) => {\n        const { status, error } = message\n\n        if (message.req_id && req_id !== message.req_id) return\n\n        chrome.runtime.onMessage && chrome.runtime.onMessage.removeListener(handler)\n\n        console.log('request', data.method, '->', status, message)\n\n        console.log(status, error)\n\n        if (status !== 'ok') {\n          reject(new InstagramError(status, error))\n        } else {\n          resolve(message)\n        }\n      }\n\n      setTimeout(() => reject(new TimeoutError('Request timeout')), 10000)\n\n      chrome.runtime.onMessage && chrome.runtime.onMessage.addListener(handler)\n\n      console.log('send_message', null, { req_id, ...data })\n      chrome.runtime.sendMessage(null, { req_id, ...data })\n    })\n  }\n}\n\nexport const instagram = new InstagramConnector()\nexport default instagram\n","import instagram from './instagram_connector'\n\nconst whenLogged = async () => {\n  const { user } = await instagram.request({\n    method: 'get_user_info',\n    params: ['instagram'],\n  })\n\n  console.log('@instagram', user.pk, user)\n\n  // const follow = await instagram.callMethod('follow', user.pk)\n\n  // console.log('follow request', follow)\n\n  await updateView()\n}\n\nconst openControlPanel = () => {\n  const WEBSITE_URL = 'https://dashboard.gramup.me/'\n  window.open(WEBSITE_URL)\n}\n\nconst updateView = async () => {\n  try {\n    const { user } = await instagram.request({\n      method: 'check_login',\n    })\n\n    console.log('update view, user =', user)\n\n    const logged_in = !!user.pk\n\n    setView({\n      logged_in,\n      user,\n    })\n  } catch (err) {\n    setView({\n      logged_in: false,\n      user: null,\n    })\n  }\n}\n\nconst setView = ({ logged_in, user = {} } = {}) => {\n  const changeDisplay = (elem, isShown) => isShown\n    ? elem.classList.remove('hide')\n    : elem.classList.add('hide')\n\n  if (logged_in) {\n    document.querySelectorAll('.logged_in').forEach(elem => changeDisplay(elem, true))\n    document.querySelectorAll('.not_logged_in').forEach(elem => changeDisplay(elem, false))\n  } else {\n    document.querySelectorAll('.logged_in').forEach(elem => changeDisplay(elem, false))\n    document.querySelectorAll('.not_logged_in').forEach(elem => changeDisplay(elem, true))\n  }\n\n  if (user) {\n    document.querySelector('.username-field').innerText = user.username\n  }\n}\n\nwindow.onload = async () => {\n  const login_form = document.forms.instalogin\n\n  if (!login_form) return\n\n  await updateView()\n\n  document.querySelector('#exit').onclick = async () => {\n    await clearCredentials()\n\n    await instagram.request({\n      method: 'exit',\n    })\n\n    await updateView()\n  }\n\n  document.querySelector('.btn-get-cookies').onclick = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await instagram.request({\n        method: 'login_via_cookie',\n      })\n\n      onLoginSuccess(res)\n    } catch (err) {\n      console.log('Login Error', err)\n      const { error: { response } } = err\n      console.error(response)\n      onLoginError(res.error.message)\n    }\n  }\n\n  login_form.onsubmit = async (event) => {\n    event.preventDefault()\n\n    const { username, password } = instalogin.elements\n    const creds = { username: username.value, password: password.value }\n\n    try {\n      const res = await instagram.request({\n        method: 'login',\n        params: [username.value, password.value],\n      })\n\n      onLoginSuccess(res, creds)\n    } catch (err) {\n      console.error(err)\n\n      const { error: { response } } = err || {}\n\n      console.error(response)\n\n      if (response.two_factor_required) {\n        const two_factor_data = response\n        const two_factor_code = prompt('Input a code for two-factor auth from SMS')\n\n        if (!two_factor_code) {\n          return onLoginError('No code')\n        }\n\n        const res = await instagram.request({\n          method: 'login_2fa',\n          params: [username.value, password.value, two_factor_code, two_factor_data],\n        })\n\n        if (res.status === 'ok') {\n          onLoginSuccess(res, creds)\n        } else {\n          onLoginError(res.error.message)\n        }\n      } else if (response.challenge) {\n        onLoginError(response.message)\n        window.open(response.challenge.url)\n      } else {\n        onLoginError(response.message)\n      }\n\n      // if (err.message.includes(`status code 400`)) {\n      //   alert(`InstagramError: Probably wrong password:` + err.message)\n      // } else if (err.message.includes(`status code 400`)) {\n      //   alert(`InstagramError: Probably wrong password:` + err.message)\n      // } else {\n      //   alert(err.message)\n      // }\n    }\n  }\n\n  const onLoginSuccess = async (res, creds) => {\n    if (creds) {\n      const { username, password } = creds\n      await saveCredentials(username, password)\n    }\n\n    await whenLogged()\n    openControlPanel()\n  }\n\n  const onLoginError = async (reason) => {\n    alert(reason)\n    console.error('LoginError:', reason)\n  }\n}\n"],"names":["window","saveCredentials","username","password","Promise","resolve","reject","chrome","storage","local","set","credentials","setTimeout","getCredentials","get","result","InstagramError","Error","[object Object]","status","error","super","this","message","response","TimeoutError","instagram","isStopped","isConnected","init","async","ping","request","method","console","log","Boolean","pong","err","start","kill","data","req_id","Date","now","handler","sender","runtime","onMessage","removeListener","addListener","sendMessage","updateView","user","logged_in","pk","setView","changeDisplay","elem","isShown","classList","remove","add","document","querySelectorAll","forEach","querySelector","innerText","onload","login_form","forms","instalogin","onclick","clearCredentials","event","preventDefault","res","onLoginSuccess","onLoginError","onsubmit","elements","creds","value","params","two_factor_required","two_factor_data","two_factor_code","prompt","challenge","open","url","whenLogged","reason","alert"],"mappings":"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"}